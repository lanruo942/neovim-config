local status, treesitter = pcall(require, "nvim-treesitter.configs")
if not status then
	vim.notify("nvim-treesitter not found!")
	return
end

require("nvim-treesitter.install").prefer_git = true

-- nvim-ts-context-commentstring
require("ts_context_commentstring").setup({
	enable_autocmd = false,
	languages = {
		typescript = "// %s",
	},
})

treesitter.setup({
	--[[ ensure_installed = "all", ]]
	ensure_installed = {
		"ada",
		"agda",
		"angular",
		"apex",
		"arduino",
		"asm",
		"astro",
		"authzed",
		"awk",
		"bash",
		"bass",
		"beancount",
		"bibtex",
		"bicep",
		"bitbake",
		"blade",
		"blueprint",
		"bp",
		"brightscript",
		"c",
		"c_sharp",
		"caddy",
		"cairo",
		"capnp",
		"chatito",
		"circom",
		"clojure",
		"cmake",
		"comment",
		"commonlisp",
		"cooklang",
		"corn",
		"cpon",
		"cpp",
		"css",
		"csv",
		"cuda",
		"cue",
		"cylc",
		"d",
		"dart",
		"desktop",
		"devicetree",
		"dhall",
		"diff",
		"disassembly",
		"djot",
		"dockerfile",
		"dot",
		"doxygen",
		"dtd",
		"earthfile",
		"ebnf",
		"editorconfig",
		"eds",
		"eex",
		"elixir",
		"elm",
		"elsa",
		"elvish",
		"embedded_template",
		"enforce",
		"erlang",
		"facility",
		"faust",
		"fennel",
		"fidl",
		"firrtl",
		"fish",
		"foam",
		"forth",
		"fortran",
		"fsh",
		"fsharp",
		"func",
		"fusion",
		"gap",
		"gaptst",
		"gdscript",
		"gdshader",
		"git_config",
		"git_rebase",
		"gitattributes",
		"gitcommit",
		"gitignore",
		"gleam",
		"glimmer",
		"glimmer_javascript",
		"glimmer_typescript",
		"glsl",
		"gn",
		"gnuplot",
		"go",
		"goctl",
		"godot_resource",
		"gomod",
		"gosum",
		"gotmpl",
		"gowork",
		"gpg",
		"graphql",
		"gren",
		"groovy",
		"gstlaunch",
		"hack",
		"hare",
		"haskell",
		"haskell_persistent",
		"hcl",
		"heex",
		"helm",
		"hjson",
		"hlsl",
		"hlsplaylist",
		"hocon",
		"hoon",
		"html",
		"htmldjango",
		"http",
		"hurl",
		"hyprlang",
		"idl",
		"idris",
		"ini",
		"inko",
		-- "ipkg" 已移除
		"ispc",
		"janet_simple",
		"java",
		"javadoc",
		"javascript",
		"jinja",
		"jinja_inline",
		"jq",
		"jsdoc",
		"json",
		"json5",
		"jsonc",
		"jsonnet",
		"julia",
		"just",
		"kcl",
		"kconfig",
		"kdl",
		"kotlin",
		"koto",
		"kusto",
		"lalrpop",
		"latex",
		"ledger",
		"leo",
		"linkerscript",
		"liquid",
		"liquidsoap",
		"llvm",
		"lua",
		"luadoc",
		"luap",
		"luau",
		"m68k",
		"make",
		"markdown",
		"markdown_inline",
		"matlab",
		"menhir",
		"mermaid",
		"meson",
		"mlir",
		"muttrc",
		"nasm",
		"nginx",
		"nickel",
		"nim",
		"nim_format_string",
		"ninja",
		"nix",
		"norg",
		"nqc",
		"nu",
		"objc",
		"objdump",
		"ocaml",
		"ocaml_interface",
		"ocamllex",
		"odin",
		"pascal",
		"passwd",
		"pem",
		"perl",
		"php",
		"php_only",
		"phpdoc",
		"pioasm",
		"po",
		"pod",
		"poe_filter",
		"pony",
		"powershell",
		"printf",
		"prisma",
		"problog",
		"prolog",
		"promql",
		"properties",
		"proto",
		"prql",
		"psv",
		"pug",
		"puppet",
		"purescript",
		"pymanifest",
		"python",
		"ql",
		"qmldir",
		"qmljs",
		"query",
		"r",
		"racket",
		"ralph",
		"rasi",
		"razor",
		"rbs",
		"re2c",
		"readline",
		"regex",
		"rego",
		"requirements",
		"rescript",
		"rnoweb",
		"robot",
		"robots",
		"roc",
		"ron",
		"rst",
		"ruby",
		"runescript",
		"rust",
		"scala",
		"scfg",
		"scheme",
		"scss",
		"sflog",
		"slang",
		"slim",
		"slint",
		"smali",
		"smithy",
		"snakemake",
		"solidity",
		"soql",
		"sosl",
		"sourcepawn",
		"sparql",
		"sql",
		"squirrel",
		"ssh_config",
		"starlark",
		"strace",
		"styled",
		"supercollider",
		"superhtml",
		"surface",
		"svelte",
		"sway",
		"swift",
		"sxhkdrc",
		"systemtap",
		"t32",
		"tablegen",
		"tact",
		"tcl",
		"teal",
		"templ",
		"tera",
		"terraform",
		"textproto",
		"thrift",
		"tiger",
		"tlaplus",
		"tmux",
		"todotxt",
		"toml",
		"tsv",
		"tsx",
		"turtle",
		"twig",
		"typescript",
		"typespec",
		"typoscript",
		"typst",
		"udev",
		"ungrammar",
		"unison",
		"usd",
		"uxntal",
		"v",
		"vala",
		"vento",
		"verilog",
		"vhdl",
		"vhs",
		"vim",
		"vimdoc",
		"vrl",
		"vue",
		"wgsl",
		"wgsl_bevy",
		"wing",
		"wit",
		"xcompose",
		"xml",
		"xresources",
		"yaml",
		"yang",
		"yuck",
		"zathurarc",
		"zig",
		"ziggy",
		"ziggy_schema",
	},
	sync_install = false,
	ignore_install = { "phpdoc" },
	highlight = {
		enable = true,
		disable = {}, -- list of language that will be disabled
		additional_vim_regex_highlighting = false,
	},
	incremental_selection = {
		enable = true,
		keymaps = {
			init_selection = "<CR>",
			node_incremental = "<CR>",
			node_decremental = "<BS>",
			scope_incremental = "<TAB>",
		},
	},
	indent = {
		enable = true,
		disable = {
			"yaml",
		},
	},
	-- autopairs
	autopairs = {
		enable = true,
	},
	-- rainbow
	rainbow = {
		enable = true,
		-- disable = { "jsx", "cpp" }, list of languages you want to disable the plugin for
		extended_mode = true, -- Also highlight non-bracket delimiters like html tags, boolean or table: lang -> boolean
		max_file_lines = nil, -- Do not enable for files with more than n lines, int
		-- colors = {}, -- table of hex strings
		-- termcolors = {} -- table of colour name strings
	},
	-- playground
	playground = {
		enable = true,
		disable = {},
		updatetime = 25, -- Debounced time for highlighting nodes in the playground from source code
		persist_queries = false, -- Whether the query persists across vim sessions
		keybindings = {
			toggle_query_editor = "o",
			toggle_hl_groups = "i",
			toggle_injected_languages = "t",
			toggle_anonymous_nodes = "a",
			toggle_language_display = "I",
			focus_language = "f",
			unfocus_language = "F",
			update = "R",
			goto_node = "<cr>",
			show_help = "?",
		},
	},
})

-- enable Folding module
vim.opt.foldmethod = "expr"
vim.opt.foldexpr = "nvim_treesitter#foldexpr()"
-- Not folded by default
-- https://stackoverflow.com/questions/8316139/how-to-set-the-default-to-unfolded-when-you-open-a-file
vim.opt.foldlevel = 99
